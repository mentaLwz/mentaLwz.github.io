3:I[735,[],""]
5:I[2082,[],""]
6:I[3965,["965","static/chunks/965-1820902794c0f3f7.js","553","static/chunks/553-e62b81a3da7a5b94.js","308","static/chunks/app/blog/%5Bslug%5D/page-ee8c1a41d15c63c2.js"],""]
7:I[707,["965","static/chunks/965-1820902794c0f3f7.js","185","static/chunks/app/layout-35f0be9d56882941.js"],"Analytics"]
8:I[1342,["965","static/chunks/965-1820902794c0f3f7.js","185","static/chunks/app/layout-35f0be9d56882941.js"],"SpeedInsights"]
4:["slug","a-bug-in-nexjs-cloudflare","d"]
0:["AU3Cj7KU4TKQ9E_X8cw2K",[[["",{"children":["blog",{"children":[["slug","a-bug-in-nexjs-cloudflare","d"],{"children":["__PAGE__?{\"slug\":\"a-bug-in-nexjs-cloudflare\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","a-bug-in-nexjs-cloudflare","d"],{"children":["__PAGE__",{},[["$L1",["$","section",null,{"children":[["$","script",null,{"type":"application/ld+json","suppressHydrationWarning":true,"dangerouslySetInnerHTML":{"__html":"{\"@context\":\"https://schema.org\",\"@type\":\"BlogPosting\",\"headline\":\"为何nextjs 不能fetch到api route\",\"datePublished\":\"2025-01-04\",\"dateModified\":\"2025-01-04\",\"description\":\"Why NextJS Couldn't Fetch from API Routes\",\"image\":\"/og?title=%E4%B8%BA%E4%BD%95nextjs%20%E4%B8%8D%E8%83%BDfetch%E5%88%B0api%20route\",\"url\":\"https://portfolio-blog-starter.vercel.app/blog/a-bug-in-nexjs-cloudflare\",\"author\":{\"@type\":\"Person\",\"name\":\"My Portfolio\"}}"}}],["$","h1",null,{"className":"title font-semibold text-2xl tracking-tighter","children":"为何nextjs 不能fetch到api route"}],["$","div",null,{"className":"flex justify-between items-center mt-2 mb-8 text-sm","children":["$","p",null,{"className":"text-sm text-neutral-600 dark:text-neutral-400","children":"January 4, 2025"}]}],["$","article",null,{"className":"prose","children":"$L2"}]]}]],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"en","className":"text-black bg-white dark:text-white dark:bg-black __variable_ac79ff __variable_8a4d12","children":["$","body",null,{"className":"antialiased max-w-3xl mx-4 mt-8 lg:mx-auto","children":["$","main",null,{"className":"flex-auto min-w-0 mt-6 flex flex-col px-4 md:px-8","children":[["$","aside",null,{"className":"-ml-[8px] mb-16 tracking-tight","children":["$","div",null,{"className":"lg:sticky lg:top-20","children":["$","nav",null,{"className":"flex flex-row items-start relative px-0 pb-0 fade md:overflow-auto scroll-pr-6 md:relative","id":"nav","children":["$","div",null,{"className":"flex flex-row space-x-0 pr-10","children":[["$","$L6","/",{"href":"/","className":"transition-all hover:text-neutral-800 dark:hover:text-neutral-200 flex align-middle relative py-1 px-2 m-1","children":"home"}],["$","$L6","/blog",{"href":"/blog","className":"transition-all hover:text-neutral-800 dark:hover:text-neutral-200 flex align-middle relative py-1 px-2 m-1","children":"blog"}],["$","$L6","/about",{"href":"/about","className":"transition-all hover:text-neutral-800 dark:hover:text-neutral-200 flex align-middle relative py-1 px-2 m-1","children":"about"}]]}]}]}]}],["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","section",null,{"children":[["$","h1",null,{"className":"mb-8 text-2xl font-semibold tracking-tighter","children":"404 - Page Not Found"}],["$","p",null,{"className":"mb-4","children":"The page you are looking for does not exist."}]]}],"notFoundStyles":[],"styles":null}],["$","footer",null,{"className":"mb-16","children":[["$","ul",null,{"className":"font-sm mt-8 flex flex-col space-x-0 space-y-2 text-neutral-600 md:flex-row md:space-x-4 md:space-y-0 dark:text-neutral-300","children":[["$","li",null,{"children":["$","a",null,{"className":"flex items-center transition-all hover:text-neutral-800 dark:hover:text-neutral-100","rel":"noopener noreferrer","target":"_blank","href":"/rss","children":[["$","svg",null,{"width":"12","height":"12","viewBox":"0 0 12 12","fill":"none","xmlns":"http://www.w3.org/2000/svg","children":["$","path",null,{"d":"M2.07102 11.3494L0.963068 10.2415L9.2017 1.98864H2.83807L2.85227 0.454545H11.8438V9.46023H10.2955L10.3097 3.09659L2.07102 11.3494Z","fill":"currentColor"}]}],["$","p",null,{"className":"ml-2 h-7","children":"rss"}]]}]}],["$","li",null,{"children":["$","a",null,{"className":"flex items-center transition-all hover:text-neutral-800 dark:hover:text-neutral-100","rel":"noopener noreferrer","target":"_blank","href":"https://github.com/mentaLwz","children":[["$","svg",null,{"width":"12","height":"12","viewBox":"0 0 12 12","fill":"none","xmlns":"http://www.w3.org/2000/svg","children":["$","path",null,{"d":"M2.07102 11.3494L0.963068 10.2415L9.2017 1.98864H2.83807L2.85227 0.454545H11.8438V9.46023H10.2955L10.3097 3.09659L2.07102 11.3494Z","fill":"currentColor"}]}],["$","p",null,{"className":"ml-2 h-7","children":"github"}]]}]}],["$","li",null,{"children":["$","a",null,{"className":"flex items-center transition-all hover:text-neutral-800 dark:hover:text-neutral-100","rel":"noopener noreferrer","target":"_blank","href":"https://vercel.com/templates/next.js/portfolio-starter-kit","children":[["$","svg",null,{"width":"12","height":"12","viewBox":"0 0 12 12","fill":"none","xmlns":"http://www.w3.org/2000/svg","children":["$","path",null,{"d":"M2.07102 11.3494L0.963068 10.2415L9.2017 1.98864H2.83807L2.85227 0.454545H11.8438V9.46023H10.2955L10.3097 3.09659L2.07102 11.3494Z","fill":"currentColor"}]}],["$","p",null,{"className":"ml-2 h-7","children":"view source"}]]}]}]]}],["$","p",null,{"className":"mt-8 text-neutral-600 dark:text-neutral-300","children":["© ",2025," MIT Licensed"]}]]}],["$","$L7",null,{}],["$","$L8",null,{}]]}]}]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/2cc1b2aa3defe199.css","precedence":"next","crossOrigin":"$undefined"}]],"$L9"]]]]
a:T2459,<span class="sh__line"><span class="sh__token--keyword" style="color: var(--sh-keyword)">export</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">const</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">runtime</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--string" style="color: var(--sh-string)">&#039;</span><span class="sh__token--string" style="color: var(--sh-string)">edge</span><span class="sh__token--string" style="color: var(--sh-string)">&#039;</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--keyword" style="color: var(--sh-keyword)">export</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">default</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">async</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">function</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--class" style="color: var(--sh-class)">Home</span><span class="sh__token--sign" style="color: var(--sh-sign)">(</span><span class="sh__token--sign" style="color: var(--sh-sign)">)</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">{</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color: var(--sh-space)">  </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">try</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">{</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color: var(--sh-space)">    </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">const</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">response</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">await</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">fetch</span><span class="sh__token--sign" style="color: var(--sh-sign)">(</span><span class="sh__token--string" style="color: var(--sh-string)">`</span><span class="sh__token--string" style="color: var(--sh-string)">/api/sites</span><span class="sh__token--string" style="color: var(--sh-string)">`</span><span class="sh__token--sign" style="color: var(--sh-sign)">,</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">{</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color: var(--sh-space)">      </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">cache</span><span class="sh__token--sign" style="color: var(--sh-sign)">:</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--string" style="color: var(--sh-string)">&#039;</span><span class="sh__token--string" style="color: var(--sh-string)">no-store</span><span class="sh__token--string" style="color: var(--sh-string)">&#039;</span><span class="sh__token--sign" style="color: var(--sh-sign)">,</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color: var(--sh-space)">    </span><span class="sh__token--sign" style="color: var(--sh-sign)">}</span><span class="sh__token--sign" style="color: var(--sh-sign)">)</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color: var(--sh-space)">        </span><span class="sh__token--sign" style="color: var(--sh-sign)">&lt;</span><span class="sh__token--entity" style="color: var(--sh-entity)">div</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--property" style="color: var(--sh-property)">className</span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--string" style="color: var(--sh-string)">flex gap-4 items-center flex-col sm:flex-row</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--sign" style="color: var(--sh-sign)">&gt;</span><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span></span>
<span class="sh__line"><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)">          </span><span class="sh__token--sign" style="color: var(--sh-sign)">&lt;</span><span class="sh__token--entity" style="color: var(--sh-entity)">a</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color: var(--sh-space)">            </span><span class="sh__token--property" style="color: var(--sh-property)">className</span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--string" style="color: var(--sh-string)">rounded-full border border-solid border-transparent transition-colors flex items-center justify-center bg-foreground text-background gap-2 hover:bg-[#383838] dark:hover:bg-[#ccc] text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color: var(--sh-space)">            </span><span class="sh__token--property" style="color: var(--sh-property)">href</span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--string" style="color: var(--sh-string)">https://vercel.com/new?utm_sourc=create-next-app&amp;utm_mediu=appdir-template-tw&amp;utm_campaig=create-next-app</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color: var(--sh-space)">            </span><span class="sh__token--property" style="color: var(--sh-property)">target</span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--string" style="color: var(--sh-string)">_blank</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color: var(--sh-space)">            </span><span class="sh__token--property" style="color: var(--sh-property)">rel</span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--string" style="color: var(--sh-string)">noopener noreferrer</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color: var(--sh-space)">          </span><span class="sh__token--sign" style="color: var(--sh-sign)">&gt;</span><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span></span>
<span class="sh__line"><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span></span>b:T147b,<span class="sh__line"><span class="sh__token--keyword" style="color: var(--sh-keyword)">export</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">const</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">runtime</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--string" style="color: var(--sh-string)">&#039;</span><span class="sh__token--string" style="color: var(--sh-string)">edge</span><span class="sh__token--string" style="color: var(--sh-string)">&#039;</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--keyword" style="color: var(--sh-keyword)">export</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">default</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">async</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">function</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--class" style="color: var(--sh-class)">Home</span><span class="sh__token--sign" style="color: var(--sh-sign)">(</span><span class="sh__token--sign" style="color: var(--sh-sign)">)</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">{</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color: var(--sh-space)">  </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">try</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">{</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color: var(--sh-space)">    </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">const</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">response</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">await</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">fetch</span><span class="sh__token--sign" style="color: var(--sh-sign)">(</span><span class="sh__token--string" style="color: var(--sh-string)">`</span><span class="sh__token--string" style="color: var(--sh-string)">/api/sites</span><span class="sh__token--string" style="color: var(--sh-string)">`</span><span class="sh__token--sign" style="color: var(--sh-sign)">,</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">{</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color: var(--sh-space)">      </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">cache</span><span class="sh__token--sign" style="color: var(--sh-sign)">:</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--string" style="color: var(--sh-string)">&#039;</span><span class="sh__token--string" style="color: var(--sh-string)">no-store</span><span class="sh__token--string" style="color: var(--sh-string)">&#039;</span><span class="sh__token--sign" style="color: var(--sh-sign)">,</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color: var(--sh-space)">    </span><span class="sh__token--sign" style="color: var(--sh-sign)">}</span><span class="sh__token--sign" style="color: var(--sh-sign)">)</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color: var(--sh-space)">    </span><span class="sh__token--comment" style="color: var(--sh-comment)">// ... rest of the code</span></span>
<span class="sh__line"><span class="sh__token--comment" style="color: var(--sh-comment)"></span></span>2:[["$","h1",null,{"id":"","children":[[["$","a","link-",{"href":"#","className":"anchor"}]],"背景"]}],"\n",["$","p",null,{"children":"想做个导航网站部署到cloudflare， 但是发现nextjs 不能fetch到api route， 我用的是nextjs15, 根据cf上cloudflare的next on pages的文档创建的"}],"\n",["$","h1",null,{"id":"","children":[[["$","a","link-",{"href":"#","className":"anchor"}]],"问题"]}],"\n",["$","p",null,{"children":"整个项目很简单，主页就是显示各个网站的信息，这些信息是在api route里面fetch数据获取的，数据库用的d1, 这部分没啥问题，本地跑npm run dev是正常的，但是跑npm run preview 或者部署到cf上就这个fetch就出问题了，代码大概如下"}],"\n",["$","pre",null,{"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$a"},"className":"language-tyepscript"}]}],"\n",["$","p",null,{"children":"问了ai但是不管用，我发现只有换成绝对的url 如（https://xxx.com/api/sites）才fetch 成功， 但我之前做过的另外个项目是可以直接fetch 的， 所以很奇怪。而且我用dev tools看发现也没有fetch的请求，感觉也挺奇怪，其实这也是一个伏笔。"}],"\n",["$","p",null,{"children":"下楼倒了下垃圾，醒悟到应该是edge runtime的问题，因为我这个component是server component，所以不能直接fetch到api route， 所以需要用绝对路径。想到这里，我对server component和client 的认识更深了。回去赶紧试了下，改成client component，用useEffect包了下fetch，果然可以直接fetch到api endpoint了。上文说的伏笔就是，因为之前改成绝对路径能行，而且是server component的，所以fetch是在server端完成的，用户端就不会再fetch了。"}],"\n",["$","h1",null,{"id":"","children":[[["$","a","link-",{"href":"#","className":"anchor"}]],"总结"]}],"\n",["$","p",null,{"children":"之前对nextjs 的server component和client component的理解不够深， 这次算是加深了理解。"}],"\n",["$","h1",null,{"id":"english-version","children":[[["$","a","link-english-version",{"href":"#english-version","className":"anchor"}]],"English version"]}],"\n",["$","h1",null,{"id":"why-nextjs-couldnt-fetch-from-api-routes","children":[[["$","a","link-why-nextjs-couldnt-fetch-from-api-routes",{"href":"#why-nextjs-couldnt-fetch-from-api-routes","className":"anchor"}]],"Why NextJS Couldn't Fetch from API Routes"]}],"\n",["$","h1",null,{"id":"background","children":[[["$","a","link-background",{"href":"#background","className":"anchor"}]],"Background"]}],"\n",["$","p",null,{"children":"I wanted to create a navigation website deployed on Cloudflare, but discovered that NextJS couldn't fetch from API routes. I was using NextJS 15 and created the project following Cloudflare's Next on Pages documentation."}],"\n",["$","h1",null,{"id":"the-issue","children":[[["$","a","link-the-issue",{"href":"#the-issue","className":"anchor"}]],"The Issue"]}],"\n",["$","p",null,{"children":["The project was quite simple - the homepage displays information about various websites, with the data being fetched from API routes using D1 as the database. This worked fine locally with ",["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"sh__line\"><span class=\"sh__token--identifier\" style=\"color: var(--sh-identifier)\">npm</span><span class=\"sh__token--space\" style=\"color: var(--sh-space)\"> </span><span class=\"sh__token--identifier\" style=\"color: var(--sh-identifier)\">run</span><span class=\"sh__token--space\" style=\"color: var(--sh-space)\"> </span><span class=\"sh__token--identifier\" style=\"color: var(--sh-identifier)\">dev</span></span>"}}],", but when running ",["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"sh__line\"><span class=\"sh__token--identifier\" style=\"color: var(--sh-identifier)\">npm</span><span class=\"sh__token--space\" style=\"color: var(--sh-space)\"> </span><span class=\"sh__token--identifier\" style=\"color: var(--sh-identifier)\">run</span><span class=\"sh__token--space\" style=\"color: var(--sh-space)\"> </span><span class=\"sh__token--identifier\" style=\"color: var(--sh-identifier)\">preview</span></span>"}}]," or deploying to Cloudflare, the fetch requests failed. The code looked something like this:"]}],"\n",["$","pre",null,{"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$b"},"className":"language-typescript"}]}],"\n",["$","p",null,{"children":["I tried asking AI for help but nothing worked. I discovered that it only succeeded when using absolute URLs (like ",["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"sh__line\"><span class=\"sh__token--identifier\" style=\"color: var(--sh-identifier)\">https</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">:</span><span class=\"sh__token--comment\" style=\"color: var(--sh-comment)\">//xxx.com/api/sites</span></span>"}}],"). This was puzzling because I had another project where direct fetching worked fine. Additionally, I noticed there were no fetch requests showing up in the dev tools, which was another peculiar detail that would later prove significant."]}],"\n",["$","p",null,{"children":"While taking out the trash, it hit me - this must be related to the edge runtime. Since this was a server component, it couldn't directly fetch from API routes, hence requiring absolute paths. This realization deepened my understanding of server and client components. When I got back, I tested this theory by converting it to a client component and wrapping the fetch in useEffect - and it worked! The earlier observation about missing network requests makes sense now: with absolute URLs in the server component, the fetch was happening server-side, so no client-side requests were needed."}],"\n",["$","h1",null,{"id":"conclusion","children":[[["$","a","link-conclusion",{"href":"#conclusion","className":"anchor"}]],"Conclusion"]}],"\n",["$","p",null,{"children":"My previous understanding of NextJS server and client components wasn't complete. This experience has significantly improved my grasp of how they work."}]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"为何nextjs 不能fetch到api route | Next.js Portfolio Starter"}],["$","meta","3",{"name":"description","content":"Why NextJS Couldn't Fetch from API Routes"}],["$","meta","4",{"name":"robots","content":"index, follow"}],["$","meta","5",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","meta","6",{"property":"og:title","content":"为何nextjs 不能fetch到api route"}],["$","meta","7",{"property":"og:description","content":"Why NextJS Couldn't Fetch from API Routes"}],["$","meta","8",{"property":"og:url","content":"https://portfolio-blog-starter.vercel.app/blog/a-bug-in-nexjs-cloudflare"}],["$","meta","9",{"property":"og:image","content":"https://portfolio-blog-starter.vercel.app/og?title=%E4%B8%BA%E4%BD%95nextjs%20%E4%B8%8D%E8%83%BDfetch%E5%88%B0api%20route"}],["$","meta","10",{"property":"og:type","content":"article"}],["$","meta","11",{"property":"article:published_time","content":"2025-01-04"}],["$","meta","12",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","13",{"name":"twitter:title","content":"为何nextjs 不能fetch到api route"}],["$","meta","14",{"name":"twitter:description","content":"Why NextJS Couldn't Fetch from API Routes"}],["$","meta","15",{"name":"twitter:image","content":"https://portfolio-blog-starter.vercel.app/og?title=%E4%B8%BA%E4%BD%95nextjs%20%E4%B8%8D%E8%83%BDfetch%E5%88%B0api%20route"}],["$","meta","16",{"name":"next-size-adjust"}]]
1:null
